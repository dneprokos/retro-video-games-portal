version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: retro-games-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - "${MONGODB_PORT}:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - retro-games-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Express.js API Server
  server:
    build:
      context: ..
      dockerfile: docker/Dockerfile.server
    container_name: retro-games-server
    restart: unless-stopped
    environment:
      NODE_ENV: test
      PORT: ${SERVER_PORT}
      MONGODB_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE}?authSource=admin
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      OWNER_EMAIL: ${OWNER_EMAIL}
      CORS_ORIGIN: http://localhost:${CLIENT_PORT}
      MAX_FILE_SIZE: ${MAX_FILE_SIZE}
      UPLOAD_PATH: ${UPLOAD_PATH}
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS}
      RATE_LIMIT_MAX_REQUESTS_DEV: ${RATE_LIMIT_MAX_REQUESTS_DEV}
      RATE_LIMIT_MAX_REQUESTS_TEST: ${RATE_LIMIT_MAX_REQUESTS_TEST}
    ports:
      - "${SERVER_PORT}:5000"
    volumes:
      - server_uploads:/app/uploads
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - retro-games-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # React Client
  client:
    build:
      context: ..
      dockerfile: docker/Dockerfile.client
    container_name: retro-games-client
    restart: unless-stopped
    ports:
      - "${CLIENT_PORT}:3000"
    depends_on:
      server:
        condition: service_healthy
    networks:
      - retro-games-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  mongodb_data:
    driver: local
  server_uploads:
    driver: local

networks:
  retro-games-network:
    driver: bridge 